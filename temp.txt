void updateFlag() throws GameActionException {
        for (RobotInfo b : nearbyTeam) {
            if (rc.canGetFlag(b.ID)) {
                int flag = rc.getFlag(b.ID);
                if (flag != 0) {
                    int info = flags.getInfoFromFlag(flag);
                    switch (info) {
                        case(InfoCodes.STARTATTACK):
                            if (rc.getFlag(rc.getID()) == 0) {
                                enemyECloc = flags.getLocationFromFlag(flag);
                                flags.sendLocationWithInfo(enemyECloc, InfoCodes.STARTATTACK);
                            }
                        case(InfoCodes.STOPATTACK):
                            if (flags.getLocationFromFlag(flag) == enemyECloc) {
                                flags.sendLocationWithInfo(enemyECloc, InfoCodes.STOPATTACK);
                                enemyECloc = null;
                            }
                    }
                }
            }
        }
        if (enemyECloc != null && rc.getFlag(rc.getID()) == 0) {
            flags.sendLocationWithInfo(enemyECloc, InfoCodes.STARTATTACK);
        }
        if (enemyECloc != null && rc.canSenseLocation(enemyECloc)) {
            RobotInfo[] enemyAtLocation = rc.senseNearbyRobots(enemyECloc, 0, enemy);
            if (enemyAtLocation.length != 0) {
                if (enemyAtLocation[0].type != RobotType.ENLIGHTENMENT_CENTER) {
                    flags.sendLocationWithInfo(enemyECloc, InfoCodes.STOPATTACK);
                    enemyECloc = null;
                }
            } else {
                RobotInfo[] teamAtLocation = rc.senseNearbyRobots(enemyECloc, 0, team);
                if (teamAtLocation.length != 0) {
                    flags.sendLocationWithInfo(enemyECloc, InfoCodes.STOPATTACK);
                    enemyECloc = null;
                }
            }
        }
        if (enemyECloc == null) {
            if (nearbyEnemys.length != 0) {
                for (RobotInfo b : nearbyEnemys) {
                    if (b.type == RobotType.ENLIGHTENMENT_CENTER) {
                        if (!(nearbyTeam.length == 0)) {
                            enemyECloc = b.location;
                        }
                        flags.sendLocationWithInfo(b.location, InfoCodes.STARTATTACK);
                        break;
                    }
                }
            }

        }
    }

#######################################################################

void updateFlag() throws GameActionException {
        for (RobotInfo b : activebots) {
        if (enemyECloc != null && enemyECloc == rc.getLocation()) {
            flags.sendLocationWithInfo(enemyECloc, InfoCodes.STOPATTACK);
            enemyECloc = null;
            return;
        }
        RobotInfo[] botsToCheck;
        if (activebots.size() == 0) {
            botsToCheck = nearbyTeam;
        } else {
            botsToCheck = new RobotInfo[activebots.size()];
            botsToCheck = activebots.toArray(botsToCheck);
        }
        for (RobotInfo b : botsToCheck) {
            if (rc.canGetFlag(b.ID)) {
                int flag = rc.getFlag(b.ID);
                if (flag != 0) {
                    int info = flags.getInfoFromFlag(flag);
                    switch (info) {
                        case(InfoCodes.STARTATTACK):
                            if (rc.getFlag(rc.getID()) == 0) {
                                enemyECloc = flags.getLocationFromFlag(flag);
                                flags.sendLocationWithInfo(enemyECloc, InfoCodes.STARTATTACK);
                            }
                        case(InfoCodes.STOPATTACK):
                            if (flags.getLocationFromFlag(flag) == enemyECloc) {
                                flags.sendLocationWithInfo(enemyECloc, InfoCodes.STOPATTACK);
                                enemyECloc = null;
                            }
                    }
                }
            }
        }
    }
